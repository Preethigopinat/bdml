from flask import Flask, request, jsonify, render_templatefrom flask_cors import CORSfrom vaderSentiment.vaderSentiment import SentimentIntensityAnalyzerimport socketapp = Flask(__name__, template_folder='templates', static_folder='static')CORS(app)# Initialize VADER sentiment analyzeranalyzer = SentimentIntensityAnalyzer()def get_sentiment_label(compound_score):    """Convert compound score to sentiment label"""    if compound_score >= 0.05:        return "positive"    elif compound_score <= -0.05:        return "negative"    else:        return "neutral"def get_confidence_level(score):    """Convert compound score magnitude into a confidence label"""    score = abs(score)    if score >= 0.7:        return "Very High"    elif score >= 0.5:        return "High"    elif score >= 0.3:        return "Medium"    elif score >= 0.1:        return "Low"    else:        return "Very Low"def find_free_port(start_port=5000, end_port=5010):    """Find the first available port in a range"""    for port in range(start_port, end_port + 1):        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:            try:                s.bind(("0.0.0.0", port))                s.listen(1)                return port            except OSError:                continue    raise RuntimeError("No available ports between 5000 and 5010")@app.route('/')def home():    """Render the main HTML UI"""    return render_template('index.html')@app.route('/api/analyze-sentiment', methods=['POST'])def analyze_sentiment():    """Analyze sentiment for the given text"""    data = request.get_json()    text = (data.get('text') or '').strip()    if not text:        return jsonify({'error': 'Please enter some text to analyze'}), 400    # Perform sentiment analysis    scores = analyzer.polarity_scores(text)    label = get_sentiment_label(scores['compound'])    confidence_label = get_confidence_level(scores['compound'])    # Build structured response    response = {        'text': text,        'sentiment': {            'label': label,            'compound': round(scores['compound'], 4),            'positive': round(scores['pos'], 4),            'negative': round(scores['neg'], 4),            'neutral': round(scores['neu'], 4),            'confidence': confidence_label,            'confidence_score': round(abs(scores['compound']), 4)        }    }    return jsonify(response)if __name__ == '__main__':    port = find_free_port(5000, 5010)    print("\nðŸš€ Comment Sentiment Analyzer")    print("=" * 40)    print("ðŸ’¬ Enter any comment to analyze sentiment")    print("ðŸŽ¯ Output: Positive / Negative / Neutral")    print("ðŸ”— Open in browser: file:///Users/gopinathk/Desktop/comment_emotion_analyser/index.html")    print(f"ðŸ§  Flask server running on: http://localhost:{port}")    print("=" * 40)    app.run(debug=True, host='0.0.0.0', port=port)